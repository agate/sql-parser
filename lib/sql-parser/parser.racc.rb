#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 330)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,   218,  -124,   148,    71,   110,    92,    92,   104,   225,
    45,     7,   229,   129,     8,    66,   141,    44,   230,   220,
   223,   221,   222,    86,    85,   155,   142,    45,   143,    68,
    68,   188,   152,    19,  -124,  -124,  -124,    68,    72,    19,
    19,    47,    48,   144,    33,    36,    38,    39,    40,    41,
    19,    49,    68,    52,    47,    48,   147,    44,    47,    48,
   223,    33,    36,    38,    39,    40,    41,    45,    49,    60,
    52,   138,    97,    68,    44,    69,    70,    29,   133,   134,
   168,   169,     8,   170,    45,   171,    98,   172,   100,   101,
    19,   102,   103,   211,   212,   173,   174,    96,    47,    48,
   176,    33,    36,    38,    39,    40,    41,    19,    49,   177,
    52,   131,    60,    60,    97,    47,    48,   183,    33,    36,
    38,    39,    40,    41,   184,    49,    44,    52,    98,    29,
   100,   101,   130,   102,   103,    14,    45,   188,   125,   200,
   203,    97,   118,    44,   117,    95,    29,   206,   207,    96,
    68,     8,    60,    45,    19,    98,   217,   100,   101,    19,
   102,   103,   107,   118,    87,    84,    83,    47,    48,   140,
    33,    36,    38,    39,    40,    41,    19,    49,    82,    52,
  -143,    81,    80,    44,    47,    48,   223,    33,    36,    38,
    39,    40,    41,    45,    49,    79,    52,    78,    77,   -80,
    44,     8,    65,   223,    64,    63,   240,   188,   189,   190,
    45,   191,   192,   193,   241,   203,    19,    60,   194,   195,
   196,   197,   198,   199,    47,    48,   225,    33,    36,    38,
    39,    40,    41,    19,    49,    54,    52,    53,   245,    12,
    44,    47,    48,   148,    33,    36,    38,    39,    40,    41,
    45,    49,   247,    52,   188,    68,    19,    44,   252,    11,
    29,   254,   255,   256,     9,   155,    68,    45,   nil,   nil,
   nil,   nil,   152,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    33,    36,    38,    39,    40,    41,
    19,    49,   nil,    52,   nil,   nil,   nil,    44,    47,    48,
   148,    33,    36,    38,    39,    40,    41,    45,    49,   nil,
    52,   nil,   nil,   nil,    44,   nil,   nil,    29,   nil,   nil,
   nil,   nil,   155,   nil,    45,   nil,   nil,   nil,   nil,   152,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,
   nil,    33,    36,    38,    39,    40,    41,    19,    49,   nil,
    52,   nil,   nil,   nil,    44,    47,    48,   223,    33,    36,
    38,    39,    40,    41,    45,    49,   nil,    52,   nil,   nil,
   nil,    44,   nil,   nil,    29,   nil,   nil,   nil,   nil,   nil,
   nil,    45,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    33,    36,
    38,    39,    40,    41,    19,    49,   nil,    52,   nil,   nil,
   nil,   nil,    47,    48,   nil,    33,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   148,   nil,   nil,   nil,
   nil,     8,   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,
    44,   nil,   nil,    29,   nil,   nil,   nil,   nil,   155,   nil,
    45,   nil,   nil,   nil,   nil,   152,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    33,    36,    38,
    39,    40,    41,    19,    49,   nil,    52,   nil,   nil,   nil,
    44,    47,    48,    29,    33,    36,    38,    39,    40,    41,
    45,    49,   nil,    52,   nil,   nil,   nil,    44,   nil,   nil,
    29,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    33,    36,    38,    39,    40,    41,
    19,    49,   nil,    52,   nil,   nil,   nil,    44,    47,    48,
   223,    33,    36,    38,    39,    40,    41,    45,    49,   nil,
    52,   nil,   nil,   nil,    44,   nil,   nil,   223,   nil,   nil,
   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,
   nil,    33,    36,    38,    39,    40,    41,    19,    49,   nil,
    52,   nil,   nil,   nil,    44,    47,    48,   223,    33,    36,
    38,    39,    40,    41,    45,    49,   nil,    52,   nil,   nil,
   nil,    44,   nil,   nil,   223,   nil,   nil,   nil,   nil,   nil,
   nil,    45,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    33,    36,
    38,    39,    40,    41,    19,    49,   nil,    52,   nil,   nil,
   nil,    44,    47,    48,   223,    33,    36,    38,    39,    40,
    41,    45,    49,   nil,    52,   nil,   nil,   nil,    44,   nil,
   nil,    29,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,
   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    33,    36,    38,    39,    40,
    41,    19,    49,   nil,    52,   nil,   nil,   nil,    44,    47,
    48,   223,    33,    36,    38,    39,    40,    41,    45,    49,
   nil,    52,   nil,   nil,   nil,    44,   nil,   nil,   223,   nil,
   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    33,    36,    38,    39,    40,    41,    19,    49,
   nil,    52,   nil,   nil,   nil,    44,    47,    48,    29,    33,
    36,    38,    39,    40,    41,    45,    49,   nil,    52,   nil,
   nil,   nil,    44,   nil,   nil,    29,   nil,   nil,   nil,   nil,
   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    33,
    36,    38,    39,    40,    41,    19,    49,   nil,    52,   nil,
   nil,   nil,    44,    47,    48,    29,    33,    36,    38,    39,
    40,    41,    45,    49,   nil,    52,   nil,   nil,   nil,    44,
   nil,   nil,    29,   nil,   nil,   nil,   nil,   nil,   119,    45,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    33,    36,    38,    39,
    40,    41,    19,    49,   nil,    52,   nil,   nil,   nil,    44,
    47,    48,   148,    33,    36,    38,    39,    40,    41,    45,
    49,   nil,    52,   nil,   nil,   nil,    44,   nil,   nil,    29,
   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,
   nil,   152,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    47,    48,   nil,    33,    36,    38,    39,    40,    41,    19,
    49,   nil,    52,   nil,   nil,   nil,    44,    47,    48,    29,
    33,    36,    38,    39,    40,    41,    45,    49,   nil,    52,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    44,   nil,   nil,   148,   nil,   nil,   nil,   nil,    19,
   nil,    45,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    33,    36,    38,    39,    40,    41,   155,    49,    44,    52,
   nil,    29,   nil,   152,    19,   nil,   nil,   nil,    45,   nil,
   nil,   nil,    47,    48,   nil,    33,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,    29,   nil,   nil,   nil,
   nil,    19,   nil,    45,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    33,    36,    38,    39,    40,    41,   nil,    49,
    44,    52,   nil,    29,   nil,   nil,    19,   nil,   nil,   nil,
    45,   nil,   nil,   nil,    47,    48,   nil,    33,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,   148,   nil,
   nil,   nil,   nil,    19,   nil,    45,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    33,    36,    38,    39,    40,    41,
   155,    49,   nil,    52,   nil,   nil,   nil,   152,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    33,
    36,    38,    39,    40,    41,   nil,    49,   nil,    52 ]

racc_action_check = [
   107,   186,    21,   107,    23,    65,   131,    54,    56,   191,
   107,     0,   193,    84,     0,    18,    99,   252,   193,   189,
   252,   189,   189,    49,    49,   107,   101,   252,   102,    65,
    56,   186,   107,   107,    21,    21,    21,    18,    23,   131,
    54,   107,   107,   103,   107,   107,   107,   107,   107,   107,
   252,   107,   104,   107,    84,    84,   106,   245,   252,   252,
   245,   252,   252,   252,   252,   252,   252,   245,   252,    97,
   252,    96,   181,   117,   225,    22,    22,   225,    90,    90,
   119,   120,   225,   121,   225,   122,   181,   123,   181,   181,
   245,   181,   181,   181,   181,   124,   128,    94,   245,   245,
   136,   245,   245,   245,   245,   245,   245,   225,   245,   137,
   245,    88,   140,   141,   108,   225,   225,   146,   225,   225,
   225,   225,   225,   225,   147,   225,     8,   225,   108,     8,
   108,   108,    85,   108,   108,     8,     8,   149,    82,   152,
   153,    55,    76,   223,    75,    55,   223,   178,   179,    55,
    66,   223,    63,   223,   184,    55,   185,    55,    55,     8,
    55,    55,    62,   187,    52,    46,    45,     8,     8,    98,
     8,     8,     8,     8,     8,     8,   223,     8,    44,     8,
    42,    41,    40,   222,   223,   223,   222,   223,   223,   223,
   223,   223,   223,   222,   223,    39,   223,    38,    36,    19,
   220,   200,    17,   220,    16,    13,   212,   213,   151,   151,
   220,   151,   151,   151,   214,   219,   222,    12,   151,   151,
   151,   151,   151,   151,   222,   222,   221,   222,   222,   222,
   222,   222,   222,   220,   222,    11,   222,     9,   224,     7,
   211,   220,   220,   211,   220,   220,   220,   220,   220,   220,
   211,   220,   229,   220,   239,   240,   241,   207,   242,     5,
   207,   246,   248,   249,     1,   211,   256,   207,   nil,   nil,
   nil,   nil,   211,   211,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   211,   211,   nil,   211,   211,   211,   211,   211,   211,
   207,   211,   nil,   211,   nil,   nil,   nil,   203,   207,   207,
   203,   207,   207,   207,   207,   207,   207,   203,   207,   nil,
   207,   nil,   nil,   nil,    95,   nil,   nil,    95,   nil,   nil,
   nil,   nil,   203,   nil,    95,   nil,   nil,   nil,   nil,   203,
   203,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,   203,
   nil,   203,   203,   203,   203,   203,   203,    95,   203,   nil,
   203,   nil,   nil,   nil,   199,    95,    95,   199,    95,    95,
    95,    95,    95,    95,   199,    95,   nil,    95,   nil,   nil,
   nil,   138,   nil,   nil,   138,   nil,   nil,   nil,   nil,   nil,
   nil,   138,   nil,   nil,   nil,   nil,   nil,   199,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   199,   199,   nil,   199,   199,
   199,   199,   199,   199,   138,   199,   nil,   199,   nil,   nil,
   nil,   nil,   138,   138,   nil,   138,   138,   138,   138,   138,
   138,   nil,   138,   148,   138,   nil,   148,   nil,   nil,   nil,
   nil,   148,   nil,   148,   nil,   nil,   nil,   nil,   nil,   nil,
    81,   nil,   nil,    81,   nil,   nil,   nil,   nil,   148,   nil,
    81,   nil,   nil,   nil,   nil,   148,   148,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   148,   148,   nil,   148,   148,   148,
   148,   148,   148,    81,   148,   nil,   148,   nil,   nil,   nil,
    24,    81,    81,    24,    81,    81,    81,    81,    81,    81,
    24,    81,   nil,    81,   nil,   nil,   nil,    29,   nil,   nil,
    29,   nil,   nil,   nil,   nil,   nil,   nil,    29,   nil,   nil,
   nil,   nil,   nil,    24,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    24,    24,    24,    24,    24,    24,
    29,    24,   nil,    24,   nil,   nil,   nil,   198,    29,    29,
   198,    29,    29,    29,    29,    29,    29,   198,    29,   nil,
    29,   nil,   nil,   nil,   197,   nil,   nil,   197,   nil,   nil,
   nil,   nil,   nil,   nil,   197,   nil,   nil,   nil,   nil,   nil,
   198,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   198,   198,
   nil,   198,   198,   198,   198,   198,   198,   197,   198,   nil,
   198,   nil,   nil,   nil,   196,   197,   197,   196,   197,   197,
   197,   197,   197,   197,   196,   197,   nil,   197,   nil,   nil,
   nil,   195,   nil,   nil,   195,   nil,   nil,   nil,   nil,   nil,
   nil,   195,   nil,   nil,   nil,   nil,   nil,   196,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   196,   196,   nil,   196,   196,
   196,   196,   196,   196,   195,   196,   nil,   196,   nil,   nil,
   nil,   194,   195,   195,   194,   195,   195,   195,   195,   195,
   195,   194,   195,   nil,   195,   nil,   nil,   nil,    80,   nil,
   nil,    80,   nil,   nil,   nil,   nil,   nil,   nil,    80,   nil,
   nil,   nil,   nil,   nil,   194,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   194,   194,   nil,   194,   194,   194,   194,   194,
   194,    80,   194,   nil,   194,   nil,   nil,   nil,   192,    80,
    80,   192,    80,    80,    80,    80,    80,    80,   192,    80,
   nil,    80,   nil,   nil,   nil,   190,   nil,   nil,   190,   nil,
   nil,   nil,   nil,   nil,   nil,   190,   nil,   nil,   nil,   nil,
   nil,   192,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   192,
   192,   nil,   192,   192,   192,   192,   192,   192,   190,   192,
   nil,   192,   nil,   nil,   nil,    79,   190,   190,    79,   190,
   190,   190,   190,   190,   190,    79,   190,   nil,   190,   nil,
   nil,   nil,    78,   nil,   nil,    78,   nil,   nil,   nil,   nil,
   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,    79,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    79,    79,   nil,    79,
    79,    79,    79,    79,    79,    78,    79,   nil,    79,   nil,
   nil,   nil,    69,    78,    78,    69,    78,    78,    78,    78,
    78,    78,    69,    78,   nil,    78,   nil,   nil,   nil,    77,
   nil,   nil,    77,   nil,   nil,   nil,   nil,   nil,    77,    77,
   nil,   nil,   nil,   nil,   nil,    69,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    69,    69,   nil,    69,    69,    69,    69,
    69,    69,    77,    69,   nil,    69,   nil,   nil,   nil,   155,
    77,    77,   155,    77,    77,    77,    77,    77,    77,   155,
    77,   nil,    77,   nil,   nil,   nil,   177,   nil,   nil,   177,
   nil,   nil,   nil,   nil,   nil,   nil,   177,   nil,   nil,   nil,
   nil,   155,   155,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   155,   155,   nil,   155,   155,   155,   155,   155,   155,   177,
   155,   nil,   155,   nil,   nil,   nil,    72,   177,   177,    72,
   177,   177,   177,   177,   177,   177,    72,   177,   nil,   177,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   183,   nil,   nil,   183,   nil,   nil,   nil,   nil,    72,
   nil,   183,   nil,   nil,   nil,   nil,   nil,    72,    72,   nil,
    72,    72,    72,    72,    72,    72,   183,    72,    64,    72,
   nil,    64,   nil,   183,   183,   nil,   nil,   nil,    64,   nil,
   nil,   nil,   183,   183,   nil,   183,   183,   183,   183,   183,
   183,   nil,   183,    71,   183,   nil,    71,   nil,   nil,   nil,
   nil,    64,   nil,    71,   nil,   nil,   nil,   nil,   nil,    64,
    64,   nil,    64,    64,    64,    64,    64,    64,   nil,    64,
    70,    64,   nil,    70,   nil,   nil,    71,   nil,   nil,   nil,
    70,   nil,   nil,   nil,    71,    71,   nil,    71,    71,    71,
    71,    71,    71,   nil,    71,   188,    71,   nil,   188,   nil,
   nil,   nil,   nil,    70,   nil,   188,   nil,   nil,   nil,   nil,
   nil,    70,    70,   nil,    70,    70,    70,    70,    70,    70,
   188,    70,   nil,    70,   nil,   nil,   nil,   188,   188,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   188,   188,   nil,   188,
   188,   188,   188,   188,   188,   nil,   188,   nil,   188 ]

racc_action_pointer = [
     1,   264,   nil,   nil,   nil,   257,   nil,   228,   121,   237,
   nil,   232,   179,   188,   nil,   nil,   200,   187,    -1,   184,
   nil,   -12,    29,   -10,   475,   nil,   nil,   nil,   nil,   492,
   nil,   nil,   nil,   nil,   nil,   nil,   190,   nil,   189,   187,
   174,   173,   125,   nil,   163,   161,   110,   nil,   nil,   -33,
   nil,   nil,   105,   nil,     2,   137,    -8,   nil,   nil,   nil,
   nil,   nil,   135,   114,   983,    -9,   112,   nil,   nil,   817,
  1035,  1008,   931,   nil,   nil,   129,   133,   834,   777,   760,
   663,   435,   133,   nil,     8,    76,   nil,   nil,   107,   nil,
    72,   nil,   nil,   nil,    85,   309,    63,    31,   150,    -3,
   nil,     4,     6,    21,    14,   nil,    28,    -5,   110,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    35,   nil,    71,
    72,    74,    76,    78,    86,   nil,   nil,   nil,    91,   nil,
   nil,     1,   nil,   nil,   nil,   nil,    91,   105,   366,   nil,
    74,    75,   nil,   nil,   nil,   nil,    88,   121,   418,    98,
   nil,   178,   131,   108,   nil,   874,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   891,   138,   144,
   nil,    68,   nil,   956,   116,   147,    -8,   154,  1060,   -12,
   720,     1,   703,   -18,   646,   606,   589,   549,   532,   349,
   188,   nil,   nil,   292,   nil,   nil,   nil,   252,   nil,   nil,
   nil,   235,   198,   168,   210,   nil,   nil,   nil,   nil,   183,
   195,   218,   178,   138,   206,    69,   nil,   nil,   nil,   216,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   215,
   217,   218,   226,   nil,   nil,    52,   252,   nil,   253,   259,
   nil,   nil,    12,   nil,   nil,   nil,   228,   nil,   nil ]

racc_action_default = [
  -155,  -155,    -1,    -2,    -3,    -5,   -16,  -155,  -155,  -155,
    -4,  -155,  -155,   -24,   -25,   -26,   -28,  -155,   -32,  -149,
  -107,  -108,  -111,  -114,  -155,  -116,  -117,  -118,  -119,  -155,
  -121,  -122,  -123,  -125,  -127,  -128,  -155,  -130,  -155,  -155,
  -155,  -155,  -136,  -137,  -141,  -155,  -155,  -147,  -148,  -155,
  -152,  -153,  -155,   259,  -155,  -155,   -37,   -38,   -40,   -41,
   -80,   -23,   -57,  -155,  -155,  -155,  -155,   -31,  -149,  -155,
  -155,  -155,  -155,  -115,  -124,  -155,  -155,  -155,  -155,  -155,
  -155,  -155,  -139,  -140,  -155,  -155,  -151,  -154,    -6,    -8,
   -12,   -10,   -11,   -17,  -155,  -155,  -155,  -155,  -155,  -155,
   -45,   -47,   -49,   -50,  -155,   -36,   -59,  -155,   -34,   -27,
   -29,  -126,   -30,  -109,  -110,  -112,  -113,  -155,  -120,  -155,
  -155,  -155,  -155,  -155,  -155,  -138,  -142,  -144,  -155,  -146,
  -150,  -155,    -9,   -13,   -14,   -18,  -155,   -21,  -155,   -42,
  -155,  -155,   -46,   -48,   -51,   -35,   -64,  -155,  -155,   -58,
   -66,  -155,  -155,   -83,   -85,  -155,   -88,   -89,   -90,   -92,
   -93,   -94,   -95,   -96,   -97,  -104,  -105,  -106,  -129,  -131,
  -132,  -133,  -134,  -135,  -145,    -7,   -19,  -155,  -155,   -74,
   -43,  -155,   -33,  -155,  -155,  -155,  -155,  -106,  -155,  -155,
  -155,  -155,  -155,  -155,  -155,  -155,  -155,  -155,  -155,  -155,
  -155,   -39,   -79,  -155,   -87,   -20,   -22,  -155,   -44,   -52,
   -53,  -155,  -155,   -65,   -60,   -62,   -63,   -15,   -91,   -84,
  -155,  -155,  -155,  -155,  -155,  -155,   -70,   -71,   -76,  -155,
   -78,   -98,   -99,  -100,  -101,  -102,  -103,   -86,   -73,   -54,
  -155,  -155,  -155,   -69,   -75,  -155,  -155,   -77,  -155,   -56,
   -82,   -61,  -155,   -68,   -72,   -55,  -155,   -67,   -81 ]

racc_goto_table = [
    67,    18,    91,   136,    55,   149,   178,    56,   215,   226,
    89,   201,    17,    15,    74,    93,   115,   116,   113,   114,
   146,   224,    76,   228,    13,   231,   232,   233,   234,   235,
   236,    94,    62,   106,    61,   182,   132,   202,   105,   243,
   208,   209,   210,     1,   248,   249,   186,   111,   112,   214,
   201,   242,    88,   244,   135,   108,    10,    18,    56,    74,
    74,    74,    74,     5,   219,   251,   237,   204,    17,   109,
   120,   121,   122,   123,   124,   238,   253,     4,     3,    91,
   201,   213,     2,   257,   128,   205,   145,   175,   137,    73,
   126,   127,   139,   246,   nil,   nil,   nil,   nil,   nil,   111,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   239,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   179,   216,   181,   nil,   180,    56,   nil,   nil,   nil,
   nil,   187,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   137,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   216,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    76,   nil,   179,   nil,
   nil,   nil,   250,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   258 ]

racc_goto_check = [
    25,    18,    11,    17,    14,    39,    19,    30,    43,    48,
     8,    12,    24,    22,    60,    15,    61,    61,    59,    59,
    28,    46,    18,    46,    20,    46,    46,    46,    46,    46,
    46,    16,    26,    27,    21,    29,    10,    32,    25,    48,
    36,    37,    38,     1,    40,    41,    39,    25,    25,    42,
    12,    46,     7,    46,    15,    14,     6,    18,    30,    60,
    60,    60,    60,     5,    52,    43,    53,    54,    24,    22,
    18,    18,    18,    18,    18,    19,    46,     4,     3,    11,
    12,    39,     2,    46,    63,    17,    25,     8,    18,    64,
    74,    75,    30,    19,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    18,    11,    14,   nil,    30,    30,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,    18,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25 ]

racc_goto_pointer = [
   nil,    43,    82,    78,    77,    63,    51,    -2,   -44,   nil,
   -54,   -52,  -141,   nil,    -8,   -40,   -24,   -92,    -7,  -132,
    16,    21,     5,   nil,     4,   -18,    19,   -29,   -86,  -111,
    -5,   nil,  -115,   nil,   nil,   nil,  -141,  -140,  -139,  -102,
  -196,  -195,  -135,  -176,   nil,   nil,  -169,   nil,  -182,   nil,
   nil,   nil,  -124,  -137,   -88,   nil,   nil,   nil,   nil,   -51,
   -10,   -55,   nil,     0,    65,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,     7,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   185,   nil,   nil,   nil,    90,
   nil,    27,   150,     6,   nil,   nil,   nil,   nil,   167,   nil,
   nil,   nil,   nil,    16,    75,    34,   nil,   nil,   nil,   nil,
    35,    57,   227,    58,    59,    99,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   166,   160,   151,   161,   nil,   162,
   163,   164,   153,   154,   156,   157,   158,   159,   165,    20,
    21,    22,    23,    24,    25,    26,    28,    30,    31,    32,
    37,    42,    43,    46,   nil,   nil,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  2, 63, :_reduce_4,
  0, 66, :_reduce_none,
  3, 66, :_reduce_6,
  3, 67, :_reduce_7,
  1, 67, :_reduce_none,
  2, 68, :_reduce_9,
  1, 69, :_reduce_none,
  1, 69, :_reduce_11,
  0, 70, :_reduce_12,
  1, 70, :_reduce_13,
  1, 70, :_reduce_14,
  3, 72, :_reduce_15,
  1, 65, :_reduce_none,
  4, 64, :_reduce_17,
  5, 64, :_reduce_18,
  3, 76, :_reduce_19,
  3, 77, :_reduce_20,
  1, 77, :_reduce_none,
  4, 75, :_reduce_22,
  3, 73, :_reduce_23,
  2, 73, :_reduce_24,
  1, 80, :_reduce_25,
  1, 80, :_reduce_26,
  3, 82, :_reduce_27,
  1, 82, :_reduce_none,
  3, 82, :_reduce_29,
  3, 83, :_reduce_30,
  2, 83, :_reduce_31,
  1, 83, :_reduce_none,
  4, 81, :_reduce_33,
  2, 86, :_reduce_34,
  3, 74, :_reduce_35,
  2, 74, :_reduce_36,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 92, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  3, 93, :_reduce_42,
  4, 93, :_reduce_43,
  5, 94, :_reduce_44,
  1, 95, :_reduce_45,
  2, 95, :_reduce_46,
  1, 95, :_reduce_47,
  2, 95, :_reduce_48,
  1, 95, :_reduce_49,
  1, 95, :_reduce_50,
  2, 95, :_reduce_51,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  2, 97, :_reduce_54,
  4, 98, :_reduce_55,
  1, 100, :_reduce_none,
  0, 87, :_reduce_none,
  2, 87, :_reduce_58,
  0, 88, :_reduce_none,
  3, 88, :_reduce_60,
  3, 102, :_reduce_61,
  1, 102, :_reduce_none,
  1, 103, :_reduce_none,
  0, 89, :_reduce_none,
  2, 89, :_reduce_65,
  1, 104, :_reduce_none,
  6, 105, :_reduce_67,
  5, 105, :_reduce_68,
  4, 107, :_reduce_69,
  3, 107, :_reduce_70,
  1, 108, :_reduce_none,
  3, 108, :_reduce_72,
  3, 79, :_reduce_73,
  1, 79, :_reduce_none,
  4, 109, :_reduce_75,
  3, 109, :_reduce_76,
  4, 110, :_reduce_77,
  3, 110, :_reduce_78,
  2, 111, :_reduce_79,
  1, 90, :_reduce_80,
  3, 101, :_reduce_81,
  1, 101, :_reduce_none,
  1, 99, :_reduce_none,
  3, 99, :_reduce_84,
  1, 112, :_reduce_none,
  3, 112, :_reduce_86,
  2, 113, :_reduce_87,
  1, 113, :_reduce_none,
  1, 114, :_reduce_none,
  1, 115, :_reduce_none,
  3, 115, :_reduce_91,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  3, 117, :_reduce_98,
  3, 117, :_reduce_99,
  3, 117, :_reduce_100,
  3, 117, :_reduce_101,
  3, 117, :_reduce_102,
  3, 117, :_reduce_103,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 118, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  3, 119, :_reduce_109,
  3, 119, :_reduce_110,
  1, 119, :_reduce_none,
  3, 121, :_reduce_112,
  3, 121, :_reduce_113,
  1, 121, :_reduce_none,
  2, 122, :_reduce_115,
  1, 122, :_reduce_none,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  3, 124, :_reduce_120,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 128, :_reduce_125,
  3, 71, :_reduce_126,
  1, 71, :_reduce_none,
  1, 84, :_reduce_none,
  4, 126, :_reduce_129,
  1, 126, :_reduce_none,
  4, 130, :_reduce_131,
  4, 130, :_reduce_132,
  4, 130, :_reduce_133,
  4, 130, :_reduce_134,
  4, 130, :_reduce_135,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  3, 131, :_reduce_138,
  2, 131, :_reduce_139,
  2, 131, :_reduce_140,
  1, 131, :_reduce_141,
  3, 132, :_reduce_142,
  1, 133, :_reduce_none,
  1, 134, :_reduce_none,
  2, 135, :_reduce_145,
  1, 135, :_reduce_146,
  1, 123, :_reduce_147,
  1, 123, :_reduce_148,
  1, 85, :_reduce_149,
  3, 120, :_reduce_150,
  2, 120, :_reduce_151,
  1, 120, :_reduce_none,
  1, 136, :_reduce_none,
  2, 137, :_reduce_154 ]

racc_reduce_n = 155

racc_shift_n = 259

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :INSERT => 10,
  :INTO => 11,
  :VALUES => 12,
  :SELECT => 13,
  :asterisk => 14,
  :period => 15,
  :AS => 16,
  :FROM => 17,
  :CROSS => 18,
  :JOIN => 19,
  :INNER => 20,
  :LEFT => 21,
  :OUTER => 22,
  :RIGHT => 23,
  :FULL => 24,
  :ON => 25,
  :USING => 26,
  :WHERE => 27,
  :GROUP => 28,
  :HAVING => 29,
  :NOT => 30,
  :BETWEEN => 31,
  :AND => 32,
  :IN => 33,
  :LIKE => 34,
  :IS => 35,
  :NULL => 36,
  :EXISTS => 37,
  :identifier => 38,
  :OR => 39,
  :equals_operator => 40,
  :not_equals_operator => 41,
  :less_than_operator => 42,
  :greater_than_operator => 43,
  :less_than_or_equals_operator => 44,
  :greater_than_or_equals_operator => 45,
  :plus_sign => 46,
  :minus_sign => 47,
  :solidus => 48,
  :CURRENT_USER => 49,
  :COUNT => 50,
  :AVG => 51,
  :MAX => 52,
  :MIN => 53,
  :SUM => 54,
  :E => 55,
  :quote => 56,
  :character_string_literal => 57,
  :DATE => 58,
  :date_string => 59 }

racc_nt_base = 60

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "period",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_reference",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "qualifier",
  "column_name",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::QualifiedAsterisk.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_44(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_61(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 149)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_73(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_81(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 82 omitted

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_84(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.racc', 203)
  def _reduce_91(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_110(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 111 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 114 omitted

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_115(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_120(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 261)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 136 omitted

# reduce 137 omitted

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 293)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 143 omitted

# reduce 144 omitted

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_145(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 303)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 307)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 311)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 315)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 316)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 152 omitted

# reduce 153 omitted

module_eval(<<'.,.,', 'parser.racc', 323)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
